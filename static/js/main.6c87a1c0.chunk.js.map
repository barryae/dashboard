{"version":3,"sources":["testData/graphObjects.tsx","testData/calendarData.tsx","testData/radarData.tsx","testData/barData.tsx","testData/lineData.tsx","testData/textData.tsx","components/Card.tsx","components/Modal.tsx","pages/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["graphObjects","title","order","classes","type","data","Card","props","className","from","to","emptyColor","colors","margin","top","right","bottom","left","yearSpacing","monthBorderColor","dayBorderWidth","dayBorderColor","legends","anchor","direction","translateY","itemCount","itemWidth","itemHeight","itemsSpacing","itemDirection","keys","indexBy","maxValue","curve","borderWidth","gridLevels","gridShape","gridLabelOffset","enableDots","dotSize","dotBorderWidth","dotBorderColor","enableDotLabel","dotLabel","dotLabelYOffset","fillOpacity","blendMode","animate","motionStiffness","motionDamping","isInteractive","translateX","itemTextColor","symbolSize","symbolShape","effects","on","style","padding","defs","id","background","color","size","stagger","rotation","lineWidth","spacing","fill","match","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","dataFrom","justify","itemOpacity","xScale","yScale","min","max","stacked","reverse","orient","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","pointLabel","pointLabelYOffset","useMesh","symbolBorderColor","itemBackground","createCard","Modal","handleClose","show","card","showHideClassName","onClick","Main","useState","setShow","setCard","sendCard","clickedCard","map","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mPAMaA,EAAe,CACxB,CACIC,MAAO,WACPC,MAAO,EACPC,QAAS,OACTC,KAAM,qBACNC,KCXN,CACE,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,GAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,GAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,GAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,GAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,GAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,GAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,KAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,IAEX,CACE,IAAO,aACP,MAAS,GAEX,CACE,IAAO,aACP,MAAS,MD9uDX,CACIJ,MAAO,QACPC,MAAO,EACPC,QAAS,OACTC,KAAM,kBACNC,KElBJ,CACI,CACI,MAAS,SACT,UAAa,GACb,UAAa,IACb,MAAS,IAEb,CACI,MAAS,SACT,UAAa,GACb,UAAa,GACb,MAAS,IAEb,CACI,MAAS,QACT,UAAa,GACb,UAAa,GACb,MAAS,IAEb,CACI,MAAS,SACT,UAAa,GACb,UAAa,IACb,MAAS,IAEb,CACI,MAAS,QACT,UAAa,GACb,UAAa,GACb,MAAS,MFTjB,CACIJ,MAAO,YACPC,MAAO,EACPC,QAAS,OACTC,KAAM,gBACNC,KGxBJ,CACI,CACI,QAAW,KACX,UAAW,GACX,eAAgB,qBAChB,OAAU,GACV,YAAe,qBACf,SAAY,IACZ,cAAiB,qBACjB,MAAS,IACT,WAAc,qBACd,MAAS,GACT,WAAc,qBACd,MAAS,IACT,WAAc,sBAElB,CACI,QAAW,KACX,UAAW,GACX,eAAgB,qBAChB,OAAU,GACV,YAAe,oBACf,SAAY,GACZ,cAAiB,qBACjB,MAAS,GACT,WAAc,qBACd,MAAS,IACT,WAAc,qBACd,MAAS,IACT,WAAc,sBAElB,CACI,QAAW,KACX,UAAW,IACX,eAAgB,qBAChB,OAAU,IACV,YAAe,oBACf,SAAY,IACZ,cAAiB,oBACjB,MAAS,GACT,WAAc,oBACd,MAAS,IACT,WAAc,oBACd,MAAS,IACT,WAAc,qBAElB,CACI,QAAW,KACX,UAAW,IACX,eAAgB,oBAChB,OAAU,GACV,YAAe,qBACf,SAAY,EACZ,cAAiB,oBACjB,MAAS,IACT,WAAc,qBACd,MAAS,IACT,WAAc,oBACd,MAAS,GACT,WAAc,qBAElB,CACI,QAAW,KACX,UAAW,IACX,eAAgB,qBAChB,OAAU,GACV,YAAe,qBACf,SAAY,IACZ,cAAiB,oBACjB,MAAS,IACT,WAAc,qBACd,MAAS,IACT,WAAc,qBACd,MAAS,GACT,WAAc,sBAElB,CACI,QAAW,KACX,UAAW,GACX,eAAgB,qBAChB,OAAU,GACV,YAAe,qBACf,SAAY,IACZ,cAAiB,qBACjB,MAAS,IACT,WAAc,qBACd,MAAS,IACT,WAAc,oBACd,MAAS,IACT,WAAc,sBAElB,CACI,QAAW,KACX,UAAW,IACX,eAAgB,oBAChB,OAAU,IACV,YAAe,qBACf,SAAY,EACZ,cAAiB,qBACjB,MAAS,IACT,WAAc,oBACd,MAAS,IACT,WAAc,qBACd,MAAS,IACT,WAAc,wBH9EtB,CACIJ,MAAO,aACPC,MAAO,EACPC,QAAS,OACTC,KAAM,iBACNC,KI/BJ,CACI,CACI,GAAM,QACN,MAAS,qBACT,KAAQ,CACJ,CACI,EAAK,QACL,EAAK,KAET,CACI,EAAK,aACL,EAAK,KAET,CACI,EAAK,OACL,EAAK,KAET,CACI,EAAK,QACL,EAAK,KAET,CACI,EAAK,SACL,EAAK,KAET,CACI,EAAK,MACL,EAAK,IAET,CACI,EAAK,MACL,EAAK,KAET,CACI,EAAK,OACL,EAAK,IAET,CACI,EAAK,UACL,EAAK,KAET,CACI,EAAK,QACL,EAAK,KAET,CACI,EAAK,aACL,EAAK,KAET,CACI,EAAK,SACL,EAAK,OAIjB,CACI,GAAM,SACN,MAAS,qBACT,KAAQ,CACJ,CACI,EAAK,QACL,EAAK,KAET,CACI,EAAK,aACL,EAAK,KAET,CACI,EAAK,OACL,EAAK,IAET,CACI,EAAK,QACL,EAAK,KAET,CACI,EAAK,SACL,EAAK,KAET,CACI,EAAK,MACL,EAAK,IAET,CACI,EAAK,MACL,EAAK,KAET,CACI,EAAK,OACL,EAAK,KAET,CACI,EAAK,UACL,EAAK,KAET,CACI,EAAK,QACL,EAAK,IAET,CACI,EAAK,aACL,EAAK,KAET,CACI,EAAK,SACL,EAAK,OAIjB,CACI,GAAM,KACN,MAAS,oBACT,KAAQ,CACJ,CACI,EAAK,QACL,EAAK,IAET,CACI,EAAK,aACL,EAAK,KAET,CACI,EAAK,OACL,EAAK,KAET,CACI,EAAK,QACL,EAAK,KAET,CACI,EAAK,SACL,EAAK,KAET,CACI,EAAK,MACL,EAAK,KAET,CACI,EAAK,MACL,EAAK,KAET,CACI,EAAK,OACL,EAAK,IAET,CACI,EAAK,UACL,EAAK,KAET,CACI,EAAK,QACL,EAAK,IAET,CACI,EAAK,aACL,EAAK,IAET,CACI,EAAK,SACL,EAAK,OAIjB,CACI,GAAM,UACN,MAAS,qBACT,KAAQ,CACJ,CACI,EAAK,QACL,EAAK,KAET,CACI,EAAK,aACL,EAAK,IAET,CACI,EAAK,OACL,EAAK,KAET,CACI,EAAK,QACL,EAAK,IAET,CACI,EAAK,SACL,EAAK,KAET,CACI,EAAK,MACL,EAAK,IAET,CACI,EAAK,MACL,EAAK,IAET,CACI,EAAK,OACL,EAAK,KAET,CACI,EAAK,UACL,EAAK,IAET,CACI,EAAK,QACL,EAAK,KAET,CACI,EAAK,aACL,EAAK,IAET,CACI,EAAK,SACL,EAAK,KAIjB,CACI,GAAM,SACN,MAAS,oBACT,KAAQ,CACJ,CACI,EAAK,QACL,EAAK,KAET,CACI,EAAK,aACL,EAAK,IAET,CACI,EAAK,OACL,EAAK,KAET,CACI,EAAK,QACL,EAAK,KAET,CACI,EAAK,SACL,EAAK,KAET,CACI,EAAK,MACL,EAAK,KAET,CACI,EAAK,MACL,EAAK,KAET,CACI,EAAK,OACL,EAAK,KAET,CACI,EAAK,UACL,EAAK,KAET,CACI,EAAK,QACL,EAAK,KAET,CACI,EAAK,aACL,EAAK,KAET,CACI,EAAK,SACL,EAAK,QJ1OrB,CACIJ,MAAO,OACPC,MAAO,E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","file":"static/js/main.6c87a1c0.chunk.js","sourcesContent":["import { calendarData } from \"../testData/calendarData\"\nimport { radarData } from \"../testData/radarData\"\nimport { barData } from \"../testData/barData\"\nimport { lineData } from \"../testData/lineData\"\nimport { textData } from \"../testData/textData\"\n\nexport const graphObjects = [\n    {\n        title: \"Calendar\",\n        order: 3,\n        classes: \"card\",\n        type: \"ResponsiveCalendar\",\n        data: calendarData\n    },\n    {\n        title: \"Radar\",\n        order: 2,\n        classes: \"card\",\n        type: \"ResponsiveRadar\",\n        data: radarData\n    },\n    {\n        title: \"Bar Graph\",\n        order: 1,\n        classes: \"card\",\n        type: \"ResponsiveBar\",\n        data: barData\n    },\n    {\n        title: \"Line Graph\",\n        order: 4,\n        classes: \"card\",\n        type: \"ResponsiveLine\",\n        data: lineData\n    },\n    {\n        title: \"Text\",\n        order: 5,\n        classes: \"text\",\n        type: \"Text\",\n        data: textData\n    }\n]\n","export const calendarData =\n  [\n    {\n      \"day\": \"2015-07-22\",\n      \"value\": 60\n    },\n    {\n      \"day\": \"2018-08-04\",\n      \"value\": 325\n    },\n    {\n      \"day\": \"2015-09-27\",\n      \"value\": 250\n    },\n    {\n      \"day\": \"2015-07-09\",\n      \"value\": 254\n    },\n    {\n      \"day\": \"2015-08-22\",\n      \"value\": 183\n    },\n    {\n      \"day\": \"2017-06-20\",\n      \"value\": 375\n    },\n    {\n      \"day\": \"2017-03-23\",\n      \"value\": 261\n    },\n    {\n      \"day\": \"2018-05-25\",\n      \"value\": 346\n    },\n    {\n      \"day\": \"2018-02-10\",\n      \"value\": 40\n    },\n    {\n      \"day\": \"2016-08-31\",\n      \"value\": 281\n    },\n    {\n      \"day\": \"2017-08-27\",\n      \"value\": 214\n    },\n    {\n      \"day\": \"2018-06-04\",\n      \"value\": 133\n    },\n    {\n      \"day\": \"2017-07-21\",\n      \"value\": 89\n    },\n    {\n      \"day\": \"2017-04-20\",\n      \"value\": 183\n    },\n    {\n      \"day\": \"2016-11-18\",\n      \"value\": 233\n    },\n    {\n      \"day\": \"2018-07-13\",\n      \"value\": 299\n    },\n    {\n      \"day\": \"2016-06-09\",\n      \"value\": 339\n    },\n    {\n      \"day\": \"2015-05-06\",\n      \"value\": 154\n    },\n    {\n      \"day\": \"2017-06-22\",\n      \"value\": 306\n    },\n    {\n      \"day\": \"2017-02-20\",\n      \"value\": 157\n    },\n    {\n      \"day\": \"2018-02-07\",\n      \"value\": 208\n    },\n    {\n      \"day\": \"2015-08-29\",\n      \"value\": 341\n    },\n    {\n      \"day\": \"2018-08-01\",\n      \"value\": 91\n    },\n    {\n      \"day\": \"2016-06-08\",\n      \"value\": 48\n    },\n    {\n      \"day\": \"2017-02-05\",\n      \"value\": 139\n    },\n    {\n      \"day\": \"2016-02-05\",\n      \"value\": 48\n    },\n    {\n      \"day\": \"2016-11-27\",\n      \"value\": 110\n    },\n    {\n      \"day\": \"2016-10-21\",\n      \"value\": 18\n    },\n    {\n      \"day\": \"2018-04-23\",\n      \"value\": 73\n    },\n    {\n      \"day\": \"2015-08-21\",\n      \"value\": 330\n    },\n    {\n      \"day\": \"2016-07-10\",\n      \"value\": 355\n    },\n    {\n      \"day\": \"2016-06-07\",\n      \"value\": 329\n    },\n    {\n      \"day\": \"2017-10-26\",\n      \"value\": 236\n    },\n    {\n      \"day\": \"2016-08-06\",\n      \"value\": 297\n    },\n    {\n      \"day\": \"2018-03-18\",\n      \"value\": 397\n    },\n    {\n      \"day\": \"2015-05-13\",\n      \"value\": 290\n    },\n    {\n      \"day\": \"2015-04-19\",\n      \"value\": 10\n    },\n    {\n      \"day\": \"2017-11-29\",\n      \"value\": 241\n    },\n    {\n      \"day\": \"2017-04-12\",\n      \"value\": 187\n    },\n    {\n      \"day\": \"2016-01-12\",\n      \"value\": 19\n    },\n    {\n      \"day\": \"2015-08-06\",\n      \"value\": 151\n    },\n    {\n      \"day\": \"2018-06-21\",\n      \"value\": 350\n    },\n    {\n      \"day\": \"2017-07-28\",\n      \"value\": 187\n    },\n    {\n      \"day\": \"2017-01-15\",\n      \"value\": 290\n    },\n    {\n      \"day\": \"2017-01-20\",\n      \"value\": 330\n    },\n    {\n      \"day\": \"2015-11-09\",\n      \"value\": 154\n    },\n    {\n      \"day\": \"2016-01-15\",\n      \"value\": 57\n    },\n    {\n      \"day\": \"2016-09-17\",\n      \"value\": 86\n    },\n    {\n      \"day\": \"2018-07-26\",\n      \"value\": 353\n    },\n    {\n      \"day\": \"2016-12-21\",\n      \"value\": 48\n    },\n    {\n      \"day\": \"2017-06-19\",\n      \"value\": 194\n    },\n    {\n      \"day\": \"2015-05-16\",\n      \"value\": 374\n    },\n    {\n      \"day\": \"2015-08-01\",\n      \"value\": 136\n    },\n    {\n      \"day\": \"2016-09-22\",\n      \"value\": 66\n    },\n    {\n      \"day\": \"2017-08-15\",\n      \"value\": 145\n    },\n    {\n      \"day\": \"2015-05-23\",\n      \"value\": 48\n    },\n    {\n      \"day\": \"2017-03-30\",\n      \"value\": 109\n    },\n    {\n      \"day\": \"2018-04-10\",\n      \"value\": 144\n    },\n    {\n      \"day\": \"2017-10-14\",\n      \"value\": 82\n    },\n    {\n      \"day\": \"2015-09-11\",\n      \"value\": 141\n    },\n    {\n      \"day\": \"2015-08-26\",\n      \"value\": 288\n    },\n    {\n      \"day\": \"2015-07-06\",\n      \"value\": 209\n    },\n    {\n      \"day\": \"2017-05-21\",\n      \"value\": 59\n    },\n    {\n      \"day\": \"2018-06-06\",\n      \"value\": 10\n    },\n    {\n      \"day\": \"2018-03-31\",\n      \"value\": 154\n    },\n    {\n      \"day\": \"2016-07-18\",\n      \"value\": 226\n    },\n    {\n      \"day\": \"2017-03-01\",\n      \"value\": 102\n    },\n    {\n      \"day\": \"2018-07-18\",\n      \"value\": 153\n    },\n    {\n      \"day\": \"2017-05-24\",\n      \"value\": 119\n    },\n    {\n      \"day\": \"2015-11-30\",\n      \"value\": 202\n    },\n    {\n      \"day\": \"2015-04-02\",\n      \"value\": 318\n    },\n    {\n      \"day\": \"2015-04-21\",\n      \"value\": 101\n    },\n    {\n      \"day\": \"2017-10-25\",\n      \"value\": 113\n    },\n    {\n      \"day\": \"2017-01-01\",\n      \"value\": 17\n    },\n    {\n      \"day\": \"2017-09-12\",\n      \"value\": 283\n    },\n    {\n      \"day\": \"2017-02-21\",\n      \"value\": 116\n    },\n    {\n      \"day\": \"2018-03-06\",\n      \"value\": 255\n    },\n    {\n      \"day\": \"2017-06-14\",\n      \"value\": 161\n    },\n    {\n      \"day\": \"2017-10-18\",\n      \"value\": 74\n    },\n    {\n      \"day\": \"2016-11-11\",\n      \"value\": 300\n    },\n    {\n      \"day\": \"2018-08-07\",\n      \"value\": 396\n    },\n    {\n      \"day\": \"2015-12-16\",\n      \"value\": 346\n    },\n    {\n      \"day\": \"2017-06-13\",\n      \"value\": 221\n    },\n    {\n      \"day\": \"2015-11-02\",\n      \"value\": 296\n    },\n    {\n      \"day\": \"2015-08-10\",\n      \"value\": 187\n    },\n    {\n      \"day\": \"2015-11-19\",\n      \"value\": 61\n    },\n    {\n      \"day\": \"2018-01-23\",\n      \"value\": 158\n    },\n    {\n      \"day\": \"2017-02-11\",\n      \"value\": 72\n    },\n    {\n      \"day\": \"2016-05-03\",\n      \"value\": 72\n    },\n    {\n      \"day\": \"2016-10-24\",\n      \"value\": 287\n    },\n    {\n      \"day\": \"2015-12-28\",\n      \"value\": 80\n    },\n    {\n      \"day\": \"2015-08-18\",\n      \"value\": 25\n    },\n    {\n      \"day\": \"2017-09-13\",\n      \"value\": 387\n    },\n    {\n      \"day\": \"2017-01-04\",\n      \"value\": 317\n    },\n    {\n      \"day\": \"2016-07-17\",\n      \"value\": 254\n    },\n    {\n      \"day\": \"2015-05-22\",\n      \"value\": 177\n    },\n    {\n      \"day\": \"2018-07-25\",\n      \"value\": 42\n    },\n    {\n      \"day\": \"2017-12-01\",\n      \"value\": 134\n    },\n    {\n      \"day\": \"2016-06-13\",\n      \"value\": 293\n    },\n    {\n      \"day\": \"2015-07-11\",\n      \"value\": 46\n    },\n    {\n      \"day\": \"2018-06-22\",\n      \"value\": 94\n    },\n    {\n      \"day\": \"2016-08-05\",\n      \"value\": 208\n    },\n    {\n      \"day\": \"2016-05-27\",\n      \"value\": 217\n    },\n    {\n      \"day\": \"2016-10-13\",\n      \"value\": 230\n    },\n    {\n      \"day\": \"2017-06-29\",\n      \"value\": 84\n    },\n    {\n      \"day\": \"2016-01-29\",\n      \"value\": 388\n    },\n    {\n      \"day\": \"2016-12-09\",\n      \"value\": 10\n    },\n    {\n      \"day\": \"2016-09-23\",\n      \"value\": 397\n    },\n    {\n      \"day\": \"2018-02-02\",\n      \"value\": 71\n    },\n    {\n      \"day\": \"2016-04-07\",\n      \"value\": 135\n    },\n    {\n      \"day\": \"2018-07-03\",\n      \"value\": 170\n    },\n    {\n      \"day\": \"2015-12-15\",\n      \"value\": 123\n    },\n    {\n      \"day\": \"2018-03-15\",\n      \"value\": 252\n    },\n    {\n      \"day\": \"2015-12-29\",\n      \"value\": 292\n    },\n    {\n      \"day\": \"2016-03-14\",\n      \"value\": 121\n    },\n    {\n      \"day\": \"2016-10-02\",\n      \"value\": 310\n    },\n    {\n      \"day\": \"2016-05-05\",\n      \"value\": 64\n    },\n    {\n      \"day\": \"2018-04-28\",\n      \"value\": 166\n    },\n    {\n      \"day\": \"2017-03-13\",\n      \"value\": 25\n    },\n    {\n      \"day\": \"2017-10-20\",\n      \"value\": 220\n    },\n    {\n      \"day\": \"2016-10-31\",\n      \"value\": 210\n    },\n    {\n      \"day\": \"2017-03-29\",\n      \"value\": 277\n    },\n    {\n      \"day\": \"2016-07-29\",\n      \"value\": 235\n    },\n    {\n      \"day\": \"2018-03-19\",\n      \"value\": 202\n    },\n    {\n      \"day\": \"2017-01-31\",\n      \"value\": 229\n    },\n    {\n      \"day\": \"2017-08-04\",\n      \"value\": 288\n    },\n    {\n      \"day\": \"2015-09-18\",\n      \"value\": 82\n    },\n    {\n      \"day\": \"2016-07-31\",\n      \"value\": 86\n    },\n    {\n      \"day\": \"2018-06-01\",\n      \"value\": 104\n    },\n    {\n      \"day\": \"2018-01-30\",\n      \"value\": 17\n    },\n    {\n      \"day\": \"2017-02-24\",\n      \"value\": 240\n    },\n    {\n      \"day\": \"2017-03-09\",\n      \"value\": 113\n    },\n    {\n      \"day\": \"2016-02-07\",\n      \"value\": 287\n    },\n    {\n      \"day\": \"2016-05-31\",\n      \"value\": 191\n    },\n    {\n      \"day\": \"2018-01-05\",\n      \"value\": 329\n    },\n    {\n      \"day\": \"2016-11-23\",\n      \"value\": 156\n    },\n    {\n      \"day\": \"2015-08-02\",\n      \"value\": 324\n    },\n    {\n      \"day\": \"2016-04-20\",\n      \"value\": 236\n    },\n    {\n      \"day\": \"2016-03-12\",\n      \"value\": 15\n    },\n    {\n      \"day\": \"2016-11-04\",\n      \"value\": 294\n    },\n    {\n      \"day\": \"2016-07-01\",\n      \"value\": 46\n    },\n    {\n      \"day\": \"2018-06-26\",\n      \"value\": 42\n    },\n    {\n      \"day\": \"2016-09-24\",\n      \"value\": 61\n    },\n    {\n      \"day\": \"2016-03-16\",\n      \"value\": 328\n    },\n    {\n      \"day\": \"2016-04-28\",\n      \"value\": 1\n    },\n    {\n      \"day\": \"2017-11-17\",\n      \"value\": 239\n    },\n    {\n      \"day\": \"2017-11-08\",\n      \"value\": 315\n    },\n    {\n      \"day\": \"2017-12-14\",\n      \"value\": 235\n    },\n    {\n      \"day\": \"2017-09-23\",\n      \"value\": 148\n    },\n    {\n      \"day\": \"2016-10-10\",\n      \"value\": 172\n    },\n    {\n      \"day\": \"2015-10-10\",\n      \"value\": 114\n    },\n    {\n      \"day\": \"2018-05-04\",\n      \"value\": 358\n    },\n    {\n      \"day\": \"2016-03-23\",\n      \"value\": 35\n    },\n    {\n      \"day\": \"2016-03-11\",\n      \"value\": 34\n    },\n    {\n      \"day\": \"2017-10-06\",\n      \"value\": 112\n    },\n    {\n      \"day\": \"2017-04-24\",\n      \"value\": 255\n    },\n    {\n      \"day\": \"2017-06-23\",\n      \"value\": 167\n    },\n    {\n      \"day\": \"2015-05-19\",\n      \"value\": 16\n    },\n    {\n      \"day\": \"2015-06-09\",\n      \"value\": 139\n    },\n    {\n      \"day\": \"2017-01-21\",\n      \"value\": 225\n    },\n    {\n      \"day\": \"2015-07-03\",\n      \"value\": 13\n    },\n    {\n      \"day\": \"2015-05-08\",\n      \"value\": 45\n    },\n    {\n      \"day\": \"2018-06-07\",\n      \"value\": 241\n    },\n    {\n      \"day\": \"2017-09-09\",\n      \"value\": 274\n    },\n    {\n      \"day\": \"2015-09-14\",\n      \"value\": 363\n    },\n    {\n      \"day\": \"2015-12-17\",\n      \"value\": 297\n    },\n    {\n      \"day\": \"2017-01-30\",\n      \"value\": 49\n    },\n    {\n      \"day\": \"2017-01-03\",\n      \"value\": 345\n    },\n    {\n      \"day\": \"2016-05-14\",\n      \"value\": 36\n    },\n    {\n      \"day\": \"2017-09-15\",\n      \"value\": 361\n    },\n    {\n      \"day\": \"2017-11-01\",\n      \"value\": 240\n    },\n    {\n      \"day\": \"2015-12-25\",\n      \"value\": 61\n    },\n    {\n      \"day\": \"2016-03-19\",\n      \"value\": 389\n    },\n    {\n      \"day\": \"2015-10-13\",\n      \"value\": 270\n    },\n    {\n      \"day\": \"2018-06-14\",\n      \"value\": 386\n    },\n    {\n      \"day\": \"2018-02-25\",\n      \"value\": 0\n    },\n    {\n      \"day\": \"2017-04-11\",\n      \"value\": 199\n    },\n    {\n      \"day\": \"2017-03-12\",\n      \"value\": 357\n    },\n    {\n      \"day\": \"2018-07-10\",\n      \"value\": 284\n    },\n    {\n      \"day\": \"2015-09-29\",\n      \"value\": 298\n    },\n    {\n      \"day\": \"2017-04-27\",\n      \"value\": 366\n    },\n    {\n      \"day\": \"2017-08-30\",\n      \"value\": 50\n    },\n    {\n      \"day\": \"2016-02-16\",\n      \"value\": 108\n    },\n    {\n      \"day\": \"2015-07-08\",\n      \"value\": 146\n    },\n    {\n      \"day\": \"2017-10-22\",\n      \"value\": 225\n    },\n    {\n      \"day\": \"2016-02-22\",\n      \"value\": 292\n    },\n    {\n      \"day\": \"2015-10-04\",\n      \"value\": 92\n    },\n    {\n      \"day\": \"2016-11-14\",\n      \"value\": 365\n    },\n    {\n      \"day\": \"2016-01-28\",\n      \"value\": 10\n    },\n    {\n      \"day\": \"2017-11-23\",\n      \"value\": 58\n    },\n    {\n      \"day\": \"2015-10-19\",\n      \"value\": 307\n    },\n    {\n      \"day\": \"2018-01-06\",\n      \"value\": 387\n    },\n    {\n      \"day\": \"2016-03-31\",\n      \"value\": 47\n    },\n    {\n      \"day\": \"2017-08-22\",\n      \"value\": 84\n    },\n    {\n      \"day\": \"2016-04-15\",\n      \"value\": 270\n    },\n    {\n      \"day\": \"2017-01-13\",\n      \"value\": 160\n    },\n    {\n      \"day\": \"2016-04-09\",\n      \"value\": 230\n    },\n    {\n      \"day\": \"2018-06-02\",\n      \"value\": 391\n    },\n    {\n      \"day\": \"2016-04-27\",\n      \"value\": 19\n    },\n    {\n      \"day\": \"2016-11-20\",\n      \"value\": 299\n    },\n    {\n      \"day\": \"2017-09-08\",\n      \"value\": 121\n    },\n    {\n      \"day\": \"2017-06-18\",\n      \"value\": 228\n    },\n    {\n      \"day\": \"2017-09-16\",\n      \"value\": 11\n    },\n    {\n      \"day\": \"2017-01-02\",\n      \"value\": 238\n    },\n    {\n      \"day\": \"2017-08-24\",\n      \"value\": 286\n    },\n    {\n      \"day\": \"2015-04-24\",\n      \"value\": 173\n    },\n    {\n      \"day\": \"2015-09-16\",\n      \"value\": 347\n    },\n    {\n      \"day\": \"2016-10-23\",\n      \"value\": 319\n    },\n    {\n      \"day\": \"2016-09-06\",\n      \"value\": 12\n    },\n    {\n      \"day\": \"2015-06-08\",\n      \"value\": 14\n    },\n    {\n      \"day\": \"2016-05-24\",\n      \"value\": 376\n    },\n    {\n      \"day\": \"2015-08-09\",\n      \"value\": 102\n    },\n    {\n      \"day\": \"2017-07-06\",\n      \"value\": 191\n    },\n    {\n      \"day\": \"2017-12-11\",\n      \"value\": 232\n    },\n    {\n      \"day\": \"2017-03-03\",\n      \"value\": 291\n    },\n    {\n      \"day\": \"2016-02-23\",\n      \"value\": 390\n    },\n    {\n      \"day\": \"2015-10-08\",\n      \"value\": 110\n    },\n    {\n      \"day\": \"2015-06-29\",\n      \"value\": 270\n    },\n    {\n      \"day\": \"2017-03-21\",\n      \"value\": 292\n    },\n    {\n      \"day\": \"2017-02-12\",\n      \"value\": 134\n    },\n    {\n      \"day\": \"2016-06-17\",\n      \"value\": 207\n    },\n    {\n      \"day\": \"2016-01-17\",\n      \"value\": 375\n    },\n    {\n      \"day\": \"2016-09-08\",\n      \"value\": 198\n    },\n    {\n      \"day\": \"2016-12-24\",\n      \"value\": 386\n    },\n    {\n      \"day\": \"2017-02-27\",\n      \"value\": 272\n    },\n    {\n      \"day\": \"2017-06-01\",\n      \"value\": 119\n    },\n    {\n      \"day\": \"2016-02-18\",\n      \"value\": 68\n    },\n    {\n      \"day\": \"2017-05-11\",\n      \"value\": 337\n    },\n    {\n      \"day\": \"2015-10-02\",\n      \"value\": 324\n    },\n    {\n      \"day\": \"2017-08-19\",\n      \"value\": 148\n    },\n    {\n      \"day\": \"2015-11-04\",\n      \"value\": 36\n    },\n    {\n      \"day\": \"2017-12-20\",\n      \"value\": 315\n    },\n    {\n      \"day\": \"2017-11-24\",\n      \"value\": 117\n    },\n    {\n      \"day\": \"2018-03-17\",\n      \"value\": 292\n    },\n    {\n      \"day\": \"2016-04-21\",\n      \"value\": 376\n    },\n    {\n      \"day\": \"2017-05-25\",\n      \"value\": 300\n    },\n    {\n      \"day\": \"2015-11-29\",\n      \"value\": 26\n    },\n    {\n      \"day\": \"2016-11-02\",\n      \"value\": 297\n    },\n    {\n      \"day\": \"2016-01-24\",\n      \"value\": 215\n    },\n    {\n      \"day\": \"2015-04-03\",\n      \"value\": 19\n    },\n    {\n      \"day\": \"2016-05-12\",\n      \"value\": 286\n    },\n    {\n      \"day\": \"2016-09-02\",\n      \"value\": 291\n    },\n    {\n      \"day\": \"2017-10-24\",\n      \"value\": 255\n    },\n    {\n      \"day\": \"2017-10-12\",\n      \"value\": 165\n    },\n    {\n      \"day\": \"2017-12-17\",\n      \"value\": 217\n    },\n    {\n      \"day\": \"2015-04-26\",\n      \"value\": 190\n    },\n    {\n      \"day\": \"2016-10-04\",\n      \"value\": 263\n    },\n    {\n      \"day\": \"2017-02-08\",\n      \"value\": 283\n    },\n    {\n      \"day\": \"2016-08-18\",\n      \"value\": 328\n    },\n    {\n      \"day\": \"2015-04-09\",\n      \"value\": 260\n    },\n    {\n      \"day\": \"2018-01-28\",\n      \"value\": 177\n    },\n    {\n      \"day\": \"2016-01-26\",\n      \"value\": 251\n    },\n    {\n      \"day\": \"2018-03-03\",\n      \"value\": 191\n    },\n    {\n      \"day\": \"2016-12-08\",\n      \"value\": 151\n    },\n    {\n      \"day\": \"2016-07-11\",\n      \"value\": 96\n    },\n    {\n      \"day\": \"2016-05-17\",\n      \"value\": 319\n    },\n    {\n      \"day\": \"2016-03-02\",\n      \"value\": 174\n    },\n    {\n      \"day\": \"2018-06-05\",\n      \"value\": 301\n    },\n    {\n      \"day\": \"2018-06-23\",\n      \"value\": 43\n    },\n    {\n      \"day\": \"2017-12-26\",\n      \"value\": 394\n    },\n    {\n      \"day\": \"2018-04-18\",\n      \"value\": 64\n    },\n    {\n      \"day\": \"2015-11-20\",\n      \"value\": 369\n    },\n    {\n      \"day\": \"2016-08-22\",\n      \"value\": 207\n    },\n    {\n      \"day\": \"2015-05-15\",\n      \"value\": 94\n    },\n    {\n      \"day\": \"2015-10-01\",\n      \"value\": 261\n    },\n    {\n      \"day\": \"2018-02-21\",\n      \"value\": 235\n    },\n    {\n      \"day\": \"2016-04-10\",\n      \"value\": 159\n    },\n    {\n      \"day\": \"2016-02-17\",\n      \"value\": 325\n    },\n    {\n      \"day\": \"2016-01-02\",\n      \"value\": 86\n    },\n    {\n      \"day\": \"2018-01-21\",\n      \"value\": 111\n    },\n    {\n      \"day\": \"2018-03-27\",\n      \"value\": 305\n    },\n    {\n      \"day\": \"2015-08-11\",\n      \"value\": 232\n    },\n    {\n      \"day\": \"2015-04-14\",\n      \"value\": 258\n    },\n    {\n      \"day\": \"2017-09-14\",\n      \"value\": 154\n    },\n    {\n      \"day\": \"2016-07-08\",\n      \"value\": 162\n    },\n    {\n      \"day\": \"2016-10-22\",\n      \"value\": 171\n    },\n    {\n      \"day\": \"2016-12-06\",\n      \"value\": 321\n    },\n    {\n      \"day\": \"2015-05-26\",\n      \"value\": 262\n    },\n    {\n      \"day\": \"2016-02-24\",\n      \"value\": 151\n    },\n    {\n      \"day\": \"2015-06-02\",\n      \"value\": 255\n    },\n    {\n      \"day\": \"2017-09-02\",\n      \"value\": 80\n    },\n    {\n      \"day\": \"2017-02-07\",\n      \"value\": 345\n    },\n    {\n      \"day\": \"2016-06-16\",\n      \"value\": 111\n    },\n    {\n      \"day\": \"2018-02-13\",\n      \"value\": 291\n    },\n    {\n      \"day\": \"2018-08-03\",\n      \"value\": 253\n    },\n    {\n      \"day\": \"2015-08-23\",\n      \"value\": 108\n    },\n    {\n      \"day\": \"2018-04-24\",\n      \"value\": 46\n    },\n    {\n      \"day\": \"2015-11-10\",\n      \"value\": 271\n    },\n    {\n      \"day\": \"2016-05-25\",\n      \"value\": 229\n    },\n    {\n      \"day\": \"2017-12-15\",\n      \"value\": 16\n    },\n    {\n      \"day\": \"2016-10-29\",\n      \"value\": 314\n    },\n    {\n      \"day\": \"2017-11-06\",\n      \"value\": 18\n    },\n    {\n      \"day\": \"2018-04-26\",\n      \"value\": 70\n    },\n    {\n      \"day\": \"2018-04-29\",\n      \"value\": 331\n    },\n    {\n      \"day\": \"2018-05-23\",\n      \"value\": 211\n    },\n    {\n      \"day\": \"2016-04-30\",\n      \"value\": 367\n    },\n    {\n      \"day\": \"2015-05-05\",\n      \"value\": 219\n    },\n    {\n      \"day\": \"2017-07-23\",\n      \"value\": 27\n    },\n    {\n      \"day\": \"2016-05-22\",\n      \"value\": 306\n    },\n    {\n      \"day\": \"2018-03-04\",\n      \"value\": 123\n    },\n    {\n      \"day\": \"2015-11-11\",\n      \"value\": 169\n    },\n    {\n      \"day\": \"2016-04-04\",\n      \"value\": 144\n    },\n    {\n      \"day\": \"2017-06-08\",\n      \"value\": 174\n    },\n    {\n      \"day\": \"2016-01-10\",\n      \"value\": 307\n    },\n    {\n      \"day\": \"2018-03-30\",\n      \"value\": 384\n    },\n    {\n      \"day\": \"2017-10-19\",\n      \"value\": 334\n    },\n    {\n      \"day\": \"2015-07-31\",\n      \"value\": 28\n    },\n    {\n      \"day\": \"2017-09-21\",\n      \"value\": 190\n    },\n    {\n      \"day\": \"2018-01-07\",\n      \"value\": 229\n    },\n    {\n      \"day\": \"2016-05-01\",\n      \"value\": 300\n    },\n    {\n      \"day\": \"2016-04-18\",\n      \"value\": 147\n    },\n    {\n      \"day\": \"2017-05-08\",\n      \"value\": 328\n    },\n    {\n      \"day\": \"2016-10-08\",\n      \"value\": 21\n    },\n    {\n      \"day\": \"2018-07-12\",\n      \"value\": 396\n    },\n    {\n      \"day\": \"2015-09-12\",\n      \"value\": 331\n    },\n    {\n      \"day\": \"2015-04-15\",\n      \"value\": 327\n    },\n    {\n      \"day\": \"2018-01-14\",\n      \"value\": 266\n    },\n    {\n      \"day\": \"2016-01-22\",\n      \"value\": 47\n    },\n    {\n      \"day\": \"2017-05-15\",\n      \"value\": 152\n    },\n    {\n      \"day\": \"2017-11-30\",\n      \"value\": 383\n    },\n    {\n      \"day\": \"2016-11-01\",\n      \"value\": 216\n    },\n    {\n      \"day\": \"2018-06-25\",\n      \"value\": 397\n    },\n    {\n      \"day\": \"2015-10-11\",\n      \"value\": 58\n    },\n    {\n      \"day\": \"2017-04-13\",\n      \"value\": 21\n    },\n    {\n      \"day\": \"2015-09-06\",\n      \"value\": 189\n    },\n    {\n      \"day\": \"2017-02-10\",\n      \"value\": 310\n    },\n    {\n      \"day\": \"2015-07-29\",\n      \"value\": 135\n    },\n    {\n      \"day\": \"2018-04-07\",\n      \"value\": 344\n    },\n    {\n      \"day\": \"2017-12-24\",\n      \"value\": 299\n    },\n    {\n      \"day\": \"2018-04-09\",\n      \"value\": 1\n    },\n    {\n      \"day\": \"2017-08-11\",\n      \"value\": 286\n    },\n    {\n      \"day\": \"2018-07-22\",\n      \"value\": 92\n    },\n    {\n      \"day\": \"2017-11-04\",\n      \"value\": 26\n    },\n    {\n      \"day\": \"2016-11-25\",\n      \"value\": 44\n    },\n    {\n      \"day\": \"2018-04-25\",\n      \"value\": 374\n    },\n    {\n      \"day\": \"2016-06-23\",\n      \"value\": 130\n    },\n    {\n      \"day\": \"2015-04-10\",\n      \"value\": 382\n    },\n    {\n      \"day\": \"2017-08-07\",\n      \"value\": 57\n    },\n    {\n      \"day\": \"2016-08-28\",\n      \"value\": 161\n    },\n    {\n      \"day\": \"2016-05-29\",\n      \"value\": 273\n    },\n    {\n      \"day\": \"2018-07-06\",\n      \"value\": 57\n    },\n    {\n      \"day\": \"2018-07-24\",\n      \"value\": 108\n    },\n    {\n      \"day\": \"2017-09-10\",\n      \"value\": 351\n    },\n    {\n      \"day\": \"2017-02-03\",\n      \"value\": 39\n    },\n    {\n      \"day\": \"2016-09-15\",\n      \"value\": 153\n    },\n    {\n      \"day\": \"2018-05-03\",\n      \"value\": 332\n    },\n    {\n      \"day\": \"2017-11-20\",\n      \"value\": 309\n    },\n    {\n      \"day\": \"2015-11-27\",\n      \"value\": 362\n    },\n    {\n      \"day\": \"2016-07-21\",\n      \"value\": 254\n    },\n    {\n      \"day\": \"2017-03-26\",\n      \"value\": 238\n    },\n    {\n      \"day\": \"2018-08-09\",\n      \"value\": 133\n    },\n    {\n      \"day\": \"2017-10-29\",\n      \"value\": 84\n    },\n    {\n      \"day\": \"2017-01-08\",\n      \"value\": 127\n    },\n    {\n      \"day\": \"2017-11-13\",\n      \"value\": 122\n    },\n    {\n      \"day\": \"2016-12-03\",\n      \"value\": 305\n    },\n    {\n      \"day\": \"2015-09-28\",\n      \"value\": 52\n    },\n    {\n      \"day\": \"2015-10-28\",\n      \"value\": 156\n    },\n    {\n      \"day\": \"2016-12-12\",\n      \"value\": 210\n    },\n    {\n      \"day\": \"2018-01-03\",\n      \"value\": 77\n    },\n    {\n      \"day\": \"2017-11-28\",\n      \"value\": 3\n    },\n    {\n      \"day\": \"2018-05-05\",\n      \"value\": 144\n    },\n    {\n      \"day\": \"2018-01-18\",\n      \"value\": 341\n    },\n    {\n      \"day\": \"2016-12-04\",\n      \"value\": 89\n    },\n    {\n      \"day\": \"2016-01-07\",\n      \"value\": 101\n    },\n    {\n      \"day\": \"2017-03-25\",\n      \"value\": 216\n    },\n    {\n      \"day\": \"2018-04-16\",\n      \"value\": 43\n    },\n    {\n      \"day\": \"2017-11-25\",\n      \"value\": 312\n    },\n    {\n      \"day\": \"2018-05-06\",\n      \"value\": 99\n    },\n    {\n      \"day\": \"2017-10-01\",\n      \"value\": 251\n    },\n    {\n      \"day\": \"2015-10-12\",\n      \"value\": 52\n    },\n    {\n      \"day\": \"2016-07-26\",\n      \"value\": 222\n    },\n    {\n      \"day\": \"2016-05-18\",\n      \"value\": 385\n    },\n    {\n      \"day\": \"2017-01-05\",\n      \"value\": 340\n    },\n    {\n      \"day\": \"2016-08-17\",\n      \"value\": 13\n    },\n    {\n      \"day\": \"2018-03-16\",\n      \"value\": 1\n    },\n    {\n      \"day\": \"2016-02-01\",\n      \"value\": 272\n    },\n    {\n      \"day\": \"2015-06-05\",\n      \"value\": 178\n    },\n    {\n      \"day\": \"2016-07-23\",\n      \"value\": 217\n    },\n    {\n      \"day\": \"2016-06-20\",\n      \"value\": 359\n    },\n    {\n      \"day\": \"2018-03-07\",\n      \"value\": 115\n    },\n    {\n      \"day\": \"2017-09-06\",\n      \"value\": 226\n    },\n    {\n      \"day\": \"2016-09-01\",\n      \"value\": 138\n    },\n    {\n      \"day\": \"2017-04-26\",\n      \"value\": 395\n    },\n    {\n      \"day\": \"2017-05-16\",\n      \"value\": 341\n    },\n    {\n      \"day\": \"2015-11-18\",\n      \"value\": 391\n    },\n    {\n      \"day\": \"2015-12-08\",\n      \"value\": 179\n    },\n    {\n      \"day\": \"2016-06-27\",\n      \"value\": 328\n    },\n    {\n      \"day\": \"2016-03-21\",\n      \"value\": 346\n    },\n    {\n      \"day\": \"2017-03-14\",\n      \"value\": 213\n    },\n    {\n      \"day\": \"2016-10-19\",\n      \"value\": 352\n    },\n    {\n      \"day\": \"2016-03-27\",\n      \"value\": 155\n    },\n    {\n      \"day\": \"2017-04-03\",\n      \"value\": 394\n    },\n    {\n      \"day\": \"2017-09-07\",\n      \"value\": 107\n    },\n    {\n      \"day\": \"2015-10-15\",\n      \"value\": 202\n    },\n    {\n      \"day\": \"2017-11-09\",\n      \"value\": 164\n    },\n    {\n      \"day\": \"2016-02-10\",\n      \"value\": 270\n    },\n    {\n      \"day\": \"2016-10-26\",\n      \"value\": 262\n    },\n    {\n      \"day\": \"2018-02-08\",\n      \"value\": 304\n    },\n    {\n      \"day\": \"2018-07-07\",\n      \"value\": 196\n    },\n    {\n      \"day\": \"2018-05-10\",\n      \"value\": 146\n    },\n    {\n      \"day\": \"2015-06-26\",\n      \"value\": 285\n    },\n    {\n      \"day\": \"2016-10-06\",\n      \"value\": 314\n    },\n    {\n      \"day\": \"2017-05-28\",\n      \"value\": 189\n    },\n    {\n      \"day\": \"2017-11-19\",\n      \"value\": 207\n    },\n    {\n      \"day\": \"2017-07-20\",\n      \"value\": 118\n    },\n    {\n      \"day\": \"2016-01-01\",\n      \"value\": 93\n    },\n    {\n      \"day\": \"2015-10-09\",\n      \"value\": 386\n    },\n    {\n      \"day\": \"2018-01-20\",\n      \"value\": 302\n    },\n    {\n      \"day\": \"2015-12-24\",\n      \"value\": 44\n    },\n    {\n      \"day\": \"2015-07-23\",\n      \"value\": 215\n    },\n    {\n      \"day\": \"2015-09-08\",\n      \"value\": 293\n    },\n    {\n      \"day\": \"2017-06-15\",\n      \"value\": 136\n    },\n    {\n      \"day\": \"2015-06-27\",\n      \"value\": 88\n    },\n    {\n      \"day\": \"2017-10-03\",\n      \"value\": 393\n    },\n    {\n      \"day\": \"2017-08-28\",\n      \"value\": 356\n    },\n    {\n      \"day\": \"2017-05-14\",\n      \"value\": 343\n    },\n    {\n      \"day\": \"2016-02-28\",\n      \"value\": 192\n    },\n    {\n      \"day\": \"2015-11-01\",\n      \"value\": 227\n    },\n    {\n      \"day\": \"2015-11-05\",\n      \"value\": 400\n    },\n    {\n      \"day\": \"2017-04-21\",\n      \"value\": 18\n    },\n    {\n      \"day\": \"2017-01-25\",\n      \"value\": 211\n    },\n    {\n      \"day\": \"2018-05-24\",\n      \"value\": 135\n    },\n    {\n      \"day\": \"2015-10-25\",\n      \"value\": 117\n    },\n    {\n      \"day\": \"2017-01-12\",\n      \"value\": 3\n    },\n    {\n      \"day\": \"2015-08-30\",\n      \"value\": 137\n    },\n    {\n      \"day\": \"2016-05-10\",\n      \"value\": 198\n    },\n    {\n      \"day\": \"2015-07-27\",\n      \"value\": 37\n    },\n    {\n      \"day\": \"2017-11-07\",\n      \"value\": 288\n    },\n    {\n      \"day\": \"2018-05-18\",\n      \"value\": 392\n    },\n    {\n      \"day\": \"2016-07-19\",\n      \"value\": 267\n    },\n    {\n      \"day\": \"2017-07-08\",\n      \"value\": 182\n    },\n    {\n      \"day\": \"2017-05-13\",\n      \"value\": 147\n    },\n    {\n      \"day\": \"2017-04-07\",\n      \"value\": 171\n    },\n    {\n      \"day\": \"2015-07-28\",\n      \"value\": 385\n    },\n    {\n      \"day\": \"2015-10-20\",\n      \"value\": 181\n    },\n    {\n      \"day\": \"2016-03-29\",\n      \"value\": 290\n    },\n    {\n      \"day\": \"2017-05-19\",\n      \"value\": 123\n    },\n    {\n      \"day\": \"2016-05-26\",\n      \"value\": 132\n    },\n    {\n      \"day\": \"2017-03-31\",\n      \"value\": 270\n    },\n    {\n      \"day\": \"2017-11-02\",\n      \"value\": 259\n    },\n    {\n      \"day\": \"2016-05-09\",\n      \"value\": 159\n    },\n    {\n      \"day\": \"2017-05-06\",\n      \"value\": 153\n    },\n    {\n      \"day\": \"2017-09-19\",\n      \"value\": 257\n    },\n    {\n      \"day\": \"2017-02-01\",\n      \"value\": 64\n    },\n    {\n      \"day\": \"2017-01-18\",\n      \"value\": 55\n    },\n    {\n      \"day\": \"2017-10-07\",\n      \"value\": 1\n    },\n    {\n      \"day\": \"2016-04-24\",\n      \"value\": 62\n    }\n  ]","export const radarData =\n    [\n        {\n            \"taste\": \"fruity\",\n            \"chardonay\": 62,\n            \"carmenere\": 102,\n            \"syrah\": 81\n        },\n        {\n            \"taste\": \"bitter\",\n            \"chardonay\": 79,\n            \"carmenere\": 86,\n            \"syrah\": 52\n        },\n        {\n            \"taste\": \"heavy\",\n            \"chardonay\": 65,\n            \"carmenere\": 45,\n            \"syrah\": 86\n        },\n        {\n            \"taste\": \"strong\",\n            \"chardonay\": 73,\n            \"carmenere\": 118,\n            \"syrah\": 60\n        },\n        {\n            \"taste\": \"sunny\",\n            \"chardonay\": 50,\n            \"carmenere\": 86,\n            \"syrah\": 58\n        }\n    ]","export const barData =\n\n    [\n        {\n            \"country\": \"AD\",\n            \"hot dog\": 94,\n            \"hot dogColor\": \"hsl(198, 70%, 50%)\",\n            \"burger\": 64,\n            \"burgerColor\": \"hsl(164, 70%, 50%)\",\n            \"sandwich\": 154,\n            \"sandwichColor\": \"hsl(321, 70%, 50%)\",\n            \"kebab\": 167,\n            \"kebabColor\": \"hsl(252, 70%, 50%)\",\n            \"fries\": 13,\n            \"friesColor\": \"hsl(300, 70%, 50%)\",\n            \"donut\": 162,\n            \"donutColor\": \"hsl(351, 70%, 50%)\"\n        },\n        {\n            \"country\": \"AE\",\n            \"hot dog\": 45,\n            \"hot dogColor\": \"hsl(142, 70%, 50%)\",\n            \"burger\": 86,\n            \"burgerColor\": \"hsl(36, 70%, 50%)\",\n            \"sandwich\": 27,\n            \"sandwichColor\": \"hsl(270, 70%, 50%)\",\n            \"kebab\": 56,\n            \"kebabColor\": \"hsl(172, 70%, 50%)\",\n            \"fries\": 125,\n            \"friesColor\": \"hsl(247, 70%, 50%)\",\n            \"donut\": 164,\n            \"donutColor\": \"hsl(129, 70%, 50%)\"\n        },\n        {\n            \"country\": \"AF\",\n            \"hot dog\": 103,\n            \"hot dogColor\": \"hsl(319, 70%, 50%)\",\n            \"burger\": 175,\n            \"burgerColor\": \"hsl(58, 70%, 50%)\",\n            \"sandwich\": 182,\n            \"sandwichColor\": \"hsl(22, 70%, 50%)\",\n            \"kebab\": 17,\n            \"kebabColor\": \"hsl(48, 70%, 50%)\",\n            \"fries\": 131,\n            \"friesColor\": \"hsl(18, 70%, 50%)\",\n            \"donut\": 172,\n            \"donutColor\": \"hsl(36, 70%, 50%)\"\n        },\n        {\n            \"country\": \"AG\",\n            \"hot dog\": 132,\n            \"hot dogColor\": \"hsl(71, 70%, 50%)\",\n            \"burger\": 66,\n            \"burgerColor\": \"hsl(153, 70%, 50%)\",\n            \"sandwich\": 5,\n            \"sandwichColor\": \"hsl(60, 70%, 50%)\",\n            \"kebab\": 111,\n            \"kebabColor\": \"hsl(252, 70%, 50%)\",\n            \"fries\": 101,\n            \"friesColor\": \"hsl(94, 70%, 50%)\",\n            \"donut\": 71,\n            \"donutColor\": \"hsl(52, 70%, 50%)\"\n        },\n        {\n            \"country\": \"AI\",\n            \"hot dog\": 135,\n            \"hot dogColor\": \"hsl(282, 70%, 50%)\",\n            \"burger\": 41,\n            \"burgerColor\": \"hsl(143, 70%, 50%)\",\n            \"sandwich\": 193,\n            \"sandwichColor\": \"hsl(73, 70%, 50%)\",\n            \"kebab\": 117,\n            \"kebabColor\": \"hsl(321, 70%, 50%)\",\n            \"fries\": 119,\n            \"friesColor\": \"hsl(302, 70%, 50%)\",\n            \"donut\": 81,\n            \"donutColor\": \"hsl(288, 70%, 50%)\"\n        },\n        {\n            \"country\": \"AL\",\n            \"hot dog\": 14,\n            \"hot dogColor\": \"hsl(318, 70%, 50%)\",\n            \"burger\": 60,\n            \"burgerColor\": \"hsl(326, 70%, 50%)\",\n            \"sandwich\": 167,\n            \"sandwichColor\": \"hsl(349, 70%, 50%)\",\n            \"kebab\": 159,\n            \"kebabColor\": \"hsl(177, 70%, 50%)\",\n            \"fries\": 159,\n            \"friesColor\": \"hsl(89, 70%, 50%)\",\n            \"donut\": 156,\n            \"donutColor\": \"hsl(314, 70%, 50%)\"\n        },\n        {\n            \"country\": \"AM\",\n            \"hot dog\": 133,\n            \"hot dogColor\": \"hsl(12, 70%, 50%)\",\n            \"burger\": 100,\n            \"burgerColor\": \"hsl(354, 70%, 50%)\",\n            \"sandwich\": 8,\n            \"sandwichColor\": \"hsl(235, 70%, 50%)\",\n            \"kebab\": 156,\n            \"kebabColor\": \"hsl(42, 70%, 50%)\",\n            \"fries\": 196,\n            \"friesColor\": \"hsl(289, 70%, 50%)\",\n            \"donut\": 103,\n            \"donutColor\": \"hsl(179, 70%, 50%)\"\n        }\n    ]","export const lineData =\n\n    [\n        {\n            \"id\": \"japan\",\n            \"color\": \"hsl(281, 70%, 50%)\",\n            \"data\": [\n                {\n                    \"x\": \"plane\",\n                    \"y\": 165\n                },\n                {\n                    \"x\": \"helicopter\",\n                    \"y\": 124\n                },\n                {\n                    \"x\": \"boat\",\n                    \"y\": 181\n                },\n                {\n                    \"x\": \"train\",\n                    \"y\": 260\n                },\n                {\n                    \"x\": \"subway\",\n                    \"y\": 180\n                },\n                {\n                    \"x\": \"bus\",\n                    \"y\": 54\n                },\n                {\n                    \"x\": \"car\",\n                    \"y\": 282\n                },\n                {\n                    \"x\": \"moto\",\n                    \"y\": 36\n                },\n                {\n                    \"x\": \"bicycle\",\n                    \"y\": 299\n                },\n                {\n                    \"x\": \"horse\",\n                    \"y\": 240\n                },\n                {\n                    \"x\": \"skateboard\",\n                    \"y\": 110\n                },\n                {\n                    \"x\": \"others\",\n                    \"y\": 141\n                }\n            ]\n        },\n        {\n            \"id\": \"france\",\n            \"color\": \"hsl(174, 70%, 50%)\",\n            \"data\": [\n                {\n                    \"x\": \"plane\",\n                    \"y\": 185\n                },\n                {\n                    \"x\": \"helicopter\",\n                    \"y\": 130\n                },\n                {\n                    \"x\": \"boat\",\n                    \"y\": 58\n                },\n                {\n                    \"x\": \"train\",\n                    \"y\": 149\n                },\n                {\n                    \"x\": \"subway\",\n                    \"y\": 145\n                },\n                {\n                    \"x\": \"bus\",\n                    \"y\": 97\n                },\n                {\n                    \"x\": \"car\",\n                    \"y\": 102\n                },\n                {\n                    \"x\": \"moto\",\n                    \"y\": 267\n                },\n                {\n                    \"x\": \"bicycle\",\n                    \"y\": 129\n                },\n                {\n                    \"x\": \"horse\",\n                    \"y\": 63\n                },\n                {\n                    \"x\": \"skateboard\",\n                    \"y\": 233\n                },\n                {\n                    \"x\": \"others\",\n                    \"y\": 223\n                }\n            ]\n        },\n        {\n            \"id\": \"us\",\n            \"color\": \"hsl(90, 70%, 50%)\",\n            \"data\": [\n                {\n                    \"x\": \"plane\",\n                    \"y\": 21\n                },\n                {\n                    \"x\": \"helicopter\",\n                    \"y\": 139\n                },\n                {\n                    \"x\": \"boat\",\n                    \"y\": 239\n                },\n                {\n                    \"x\": \"train\",\n                    \"y\": 255\n                },\n                {\n                    \"x\": \"subway\",\n                    \"y\": 141\n                },\n                {\n                    \"x\": \"bus\",\n                    \"y\": 145\n                },\n                {\n                    \"x\": \"car\",\n                    \"y\": 252\n                },\n                {\n                    \"x\": \"moto\",\n                    \"y\": 48\n                },\n                {\n                    \"x\": \"bicycle\",\n                    \"y\": 121\n                },\n                {\n                    \"x\": \"horse\",\n                    \"y\": 54\n                },\n                {\n                    \"x\": \"skateboard\",\n                    \"y\": 94\n                },\n                {\n                    \"x\": \"others\",\n                    \"y\": 157\n                }\n            ]\n        },\n        {\n            \"id\": \"germany\",\n            \"color\": \"hsl(198, 70%, 50%)\",\n            \"data\": [\n                {\n                    \"x\": \"plane\",\n                    \"y\": 277\n                },\n                {\n                    \"x\": \"helicopter\",\n                    \"y\": 62\n                },\n                {\n                    \"x\": \"boat\",\n                    \"y\": 160\n                },\n                {\n                    \"x\": \"train\",\n                    \"y\": 49\n                },\n                {\n                    \"x\": \"subway\",\n                    \"y\": 221\n                },\n                {\n                    \"x\": \"bus\",\n                    \"y\": 45\n                },\n                {\n                    \"x\": \"car\",\n                    \"y\": 78\n                },\n                {\n                    \"x\": \"moto\",\n                    \"y\": 228\n                },\n                {\n                    \"x\": \"bicycle\",\n                    \"y\": 70\n                },\n                {\n                    \"x\": \"horse\",\n                    \"y\": 296\n                },\n                {\n                    \"x\": \"skateboard\",\n                    \"y\": 91\n                },\n                {\n                    \"x\": \"others\",\n                    \"y\": 7\n                }\n            ]\n        },\n        {\n            \"id\": \"norway\",\n            \"color\": \"hsl(13, 70%, 50%)\",\n            \"data\": [\n                {\n                    \"x\": \"plane\",\n                    \"y\": 238\n                },\n                {\n                    \"x\": \"helicopter\",\n                    \"y\": 88\n                },\n                {\n                    \"x\": \"boat\",\n                    \"y\": 188\n                },\n                {\n                    \"x\": \"train\",\n                    \"y\": 233\n                },\n                {\n                    \"x\": \"subway\",\n                    \"y\": 114\n                },\n                {\n                    \"x\": \"bus\",\n                    \"y\": 231\n                },\n                {\n                    \"x\": \"car\",\n                    \"y\": 106\n                },\n                {\n                    \"x\": \"moto\",\n                    \"y\": 249\n                },\n                {\n                    \"x\": \"bicycle\",\n                    \"y\": 272\n                },\n                {\n                    \"x\": \"horse\",\n                    \"y\": 283\n                },\n                {\n                    \"x\": \"skateboard\",\n                    \"y\": 142\n                },\n                {\n                    \"x\": \"others\",\n                    \"y\": 67\n                }\n            ]\n        }\n    ]","export const textData =\n    [\n        \"Duis ac tellus et risus vulputate vehicula.Donec lobortis risus a elit.Etiam tempor.Ut ullamcorper, ligula eu tempor congue, eros est euismod turpis, id tincidunt sapien risus a quam.Maecenas fermentum consequat mi.Donec fermentum.Pellentesque malesuada nulla a mi.Duis sapien sem, aliquet nec, commodo eget, consequat quis, neque.Aliquam faucibus, elit ut dictum aliquet, felis nisl adipiscing sapien, sed malesuada diam lacus eget erat.Cras mollis scelerisque nunc.Nullam arcu.Aliquam consequat.Curabitur augue lorem, dapibus quis, laoreet et, pretium ac, nisi.Aenean magna nisl, mollis quis, molestie eu, feugiat in, orci.In hac habitasse platea dictumst.\"\n    ]","import * as React from \"react\";\nimport { ResponsiveCalendar, ResponsiveRadar, ResponsiveBar, ResponsiveLine } from \"nivo\"\n\n\nexport default function Card(props: { order: number; classes: string; type: string; data: any[]; title: string }) {\n    function createCard(type: string, data: any[]) {\n\n        switch (type) {\n            case 'Text':\n                return (\n                    <p>{data}</p>\n                )\n            case 'ResponsiveCalendar':\n                return (\n                    <ResponsiveCalendar\n                        data={data}\n                        from=\"2015-03-01\"\n                        to=\"2016-07-12\"\n                        emptyColor=\"#eeeeee\"\n                        colors={['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560']}\n                        margin={{ top: 40, right: 0, bottom: 0, left: 40 }}\n                        yearSpacing={40}\n                        monthBorderColor=\"#ffffff\"\n                        dayBorderWidth={2}\n                        dayBorderColor=\"#ffffff\"\n                        legends={[\n                            {\n                                anchor: 'bottom-right',\n                                direction: 'row',\n                                translateY: 36,\n                                itemCount: 4,\n                                itemWidth: 42,\n                                itemHeight: 36,\n                                itemsSpacing: 14,\n                                itemDirection: 'right-to-left'\n                            }\n                        ]}\n                    />\n                )\n            case 'ResponsiveRadar':\n                return (\n\n                    <ResponsiveRadar\n                        data={data}\n                        keys={['chardonay', 'carmenere', 'syrah']}\n                        indexBy=\"taste\"\n                        maxValue=\"auto\"\n                        margin={{ top: 40, right: 10, bottom: 30, left: 10 }}\n                        curve=\"linearClosed\"\n                        borderWidth={2}\n                        gridLevels={5}\n                        gridShape=\"circular\"\n                        gridLabelOffset={36}\n                        enableDots={true}\n                        dotSize={10}\n                        dotBorderWidth={2}\n                        dotBorderColor='#97e3d5'\n                        enableDotLabel={true}\n                        dotLabel=\"value\"\n                        dotLabelYOffset={-12}\n                        colors={['#61cdbb', '#97e3d5', '#f47560']}\n                        fillOpacity={0.25}\n                        blendMode=\"multiply\"\n                        animate={true}\n                        motionStiffness={90}\n                        motionDamping={15}\n                        isInteractive={true}\n                        legends={[\n                            {\n                                anchor: 'top-left',\n                                direction: 'column',\n                                translateX: 50,\n                                translateY: 50,\n                                itemWidth: 80,\n                                itemHeight: 20,\n                                itemTextColor: '#999',\n                                symbolSize: 12,\n                                symbolShape: 'circle',\n                                effects: [\n                                    {\n                                        on: 'hover',\n                                        style: {\n                                            itemTextColor: '#000'\n                                        }\n                                    }\n                                ]\n                            }\n                        ]}\n                    />\n\n                )\n            case 'ResponsiveBar':\n                return (\n\n                    <ResponsiveBar\n                        data={data}\n                        keys={['hot dog', 'burger', 'sandwich', 'kebab', 'fries', 'donut']}\n                        indexBy=\"country\"\n                        margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\n                        padding={0.3}\n                        colors={['#61cdbb', '#97e3d5', '#f47560']}\n                        defs={[\n                            {\n                                id: 'dots',\n                                type: 'patternDots',\n                                background: 'inherit',\n                                color: '#38bcb2',\n                                size: 4,\n                                padding: 1,\n                                stagger: true\n                            },\n                            {\n                                id: 'lines',\n                                type: 'patternLines',\n                                background: 'inherit',\n                                color: '#eed312',\n                                rotation: -45,\n                                lineWidth: 6,\n                                spacing: 10\n                            }\n                        ]}\n                        fill={[\n                            {\n                                match: {\n                                    id: 'fries'\n                                },\n                                id: 'dots'\n                            },\n                            {\n                                match: {\n                                    id: 'sandwich'\n                                },\n                                id: 'lines'\n                            }\n                        ]}\n                        // borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\n                        axisTop={null}\n                        axisRight={null}\n                        axisBottom={{\n                            tickSize: 5,\n                            tickPadding: 5,\n                            tickRotation: 0,\n                            legend: 'country',\n                            legendPosition: 'middle',\n                            legendOffset: 32\n                        }}\n                        axisLeft={{\n                            tickSize: 5,\n                            tickPadding: 5,\n                            tickRotation: 0,\n                            legend: 'food',\n                            legendPosition: 'middle',\n                            legendOffset: -40\n                        }}\n                        labelSkipWidth={12}\n                        labelSkipHeight={12}\n                        // labelTextColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\n                        legends={[\n                            {\n                                dataFrom: 'keys',\n                                anchor: 'bottom-right',\n                                direction: 'column',\n                                justify: false,\n                                translateX: 120,\n                                translateY: 0,\n                                itemsSpacing: 2,\n                                itemWidth: 100,\n                                itemHeight: 20,\n                                itemDirection: 'left-to-right',\n                                itemOpacity: 0.85,\n                                symbolSize: 20,\n                                effects: [\n                                    {\n                                        on: 'hover',\n                                        style: {\n                                            itemOpacity: 1\n                                        }\n                                    }\n                                ]\n                            }\n                        ]}\n                        animate={true}\n                        motionStiffness={90}\n                        motionDamping={15}\n                    />\n\n                )\n            case 'ResponsiveLine':\n                return (\n\n                    <ResponsiveLine\n                        data={data}\n                        margin={{ top: 30, right: 20, bottom: 40, left: 60 }}\n                        xScale={{ type: 'point' }}\n                        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n                        axisTop={null}\n                        axisRight={null}\n                        axisBottom={{\n                            orient: 'bottom',\n                            tickSize: 5,\n                            tickPadding: 5,\n                            tickRotation: 0,\n                            legend: 'transportation',\n                            legendOffset: 36,\n                            legendPosition: 'middle'\n                        }}\n                        axisLeft={{\n                            orient: 'left',\n                            tickSize: 5,\n                            tickPadding: 5,\n                            tickRotation: 0,\n                            legend: 'count',\n                            legendOffset: -40,\n                            legendPosition: 'middle'\n                        }}\n                        colors={['#61cdbb', '#97e3d5', '#f47560']}\n                        pointSize={10}\n                        pointColor={{ theme: 'background' }}\n                        pointBorderWidth={2}\n                        pointBorderColor={{ from: 'serieColor' }}\n                        pointLabel=\"y\"\n                        pointLabelYOffset={-12}\n                        useMesh={true}\n                        legends={[\n                            {\n                                anchor: 'bottom-right',\n                                direction: 'column',\n                                justify: false,\n                                translateX: 100,\n                                translateY: 0,\n                                itemsSpacing: 0,\n                                itemDirection: 'left-to-right',\n                                itemWidth: 80,\n                                itemHeight: 20,\n                                itemOpacity: 0.75,\n                                symbolSize: 12,\n                                symbolShape: 'circle',\n                                symbolBorderColor: 'rgba(0, 0, 0, .5)',\n                                effects: [\n                                    {\n                                        on: 'hover',\n                                        style: {\n                                            itemBackground: 'rgba(0, 0, 0, .03)',\n                                            itemOpacity: 1\n                                        }\n                                    }\n                                ]\n                            }\n                        ]}\n                    />\n                )\n        }\n    }\n\n    return (\n        <>\n            <h3 className=\"card-title\">\n                {props.title}\n            </h3>\n            <div className={'card-' + props.order + \" \" + props.classes}>\n                {createCard(props.type, props.data)}\n            </div>\n        </>\n    )\n\n}","import * as React from \"react\"\n\ninterface ModalProps {\n    handleClose: any\n    show: boolean\n    card: any\n}\n\nexport const Modal: React.FC<ModalProps> = ({ handleClose, show, card }) => {\n    const showHideClassName = show ? \"modal display-block\" : \"modal display-none\"\n    return (\n        <div className={showHideClassName}>\n            <section className={\"modal-main\"}>\n                <button className=\"modal-button\" onClick={handleClose}>X</button>\n                {card}\n            </section>\n        </div>\n    )\n\n}","import * as React from \"react\";\nimport { useState } from 'react';\nimport { graphObjects } from '../testData/graphObjects'\nimport Card from \"../components/Card\"\nimport { Modal } from \"../components/Modal\"\n\nexport default function Main() {\n    let [show, setShow] = useState(false)\n    let [card, setCard] = useState(0)\n    let createdCards: any[];\n\n    function showModal() {\n        setShow(show = true)\n    }\n\n    function hideModal() {\n        setShow(show = false)\n    }\n\n    function sendCard(clickedCard: any) {\n        setCard(card = clickedCard)\n    }\n\n    function renderCards(array: any[]) {\n        let cards = array;\n        createdCards = cards.map(card => {\n            return (<div onClick={() => {\n                sendCard(<Card order={card.order} classes={card.classes + \" clicked\"} type={card.type} data={card.data} title={card.title} />)\n                showModal();\n            }}>\n                <Card order={card.order} classes={card.classes} type={card.type} data={card.data} title={card.title} />\n            </div>)\n        })\n        return createdCards;\n    }\n\n    return (\n        <div className=\"main\">\n            <div className=\"main-header\">\n                <h1>Dashboard</h1>\n            </div>\n            <div className=\"card-layout\">\n                {renderCards(graphObjects)}\n            </div>\n            <Modal show={show} handleClose={hideModal} card={card} />\n        </div >\n    )\n\n}\n\n","import React from 'react';\nimport Main from \"./pages/Main\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}